import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { useState } from "react";
import { Button } from "@material-tailwind/react";

export default function Home() {
  const [option, setoption] = useState(false);

  const [userValues, setUserValues] = useState<any>({
    amount: null,
    year: null,
    rate: null,
  });

  const handleInputChange = (e: any) => {
    setUserValues({ ...userValues, [e.target.name]: e.target.value });
  };

  //create var for calculation
  const [Result, setResult] = useState({
    monthAmount: 0,
    totalMonths: 0,
    monthInterest: 0,
    interestAmount: 0,
    totalAmount: 0,
  });

  const [dee, setdee] = useState<any>(); //for storing monthly schedule
  const [ydata, setydata] = useState<any>(); //for storing yearly schedule

  const monthlyPay = ({ amount, year, rate }: any) => {
    const R = rate / 100 / 12;
    const M = year * 12;
    const x = Math.pow(1 + R, M);

    const monthly = (amount * R * x) / (x - 1);

    const Tamount = M * monthly;
    const IM = Tamount - amount;

    const mSchedule = [];
    const ySchedule = [];

    let begBalance = amount;
    let yBegBalance = amount;
    let Interest = 0,
      principle = 0,
      endBalance = 0;
    let yInterest = 0,
      yPrinciple = 0,
      yEndBalance = 0;

    for (let i = 0; i < M; i++) {
      Interest = begBalance * R;
      principle = monthly - Interest;
      endBalance = begBalance - principle;

      Interest = parseFloat(Interest.toFixed(2));
      principle = parseFloat(principle.toFixed(2));
      endBalance = parseFloat(endBalance.toFixed(2));

      yInterest = parseFloat((yInterest + Interest).toFixed(2));
      yPrinciple = parseFloat((yPrinciple + principle).toFixed(2));

      mSchedule.push({ begBalance, Interest, principle, endBalance });

      if ((i + 1) % 12 === 0) {
        yEndBalance = endBalance;
        ySchedule.push({ yBegBalance, yInterest, yPrinciple, yEndBalance });
        yBegBalance = yEndBalance;
        yInterest = 0;
        yPrinciple = 0;
      }

      begBalance = endBalance;
    }

    setResult({
      monthAmount: monthly,
      totalMonths: M,
      monthInterest: R,
      interestAmount: IM,
      totalAmount: Tamount,
    });

    setdee(mSchedule);
    setydata(ySchedule);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="py-5 md:px-10 px-2 bg-blue-gray-900">
        <p className="md:text-6xl text-2xl w-full text-center py-8 text-gray-200 font-bold">
          EMI CALCULATOR WEB APP
        </p>
        {/* input fields */}
        <div className=" w-full lg:flex flex-wrap justify-around">
          <div className="rounded-xl lg:w-1/3 md:[40%] w-full text-white p-5 bg-black shadow-gray-900 py-8 shadow-xl flex flex-col gap-y-5 lg:mb-0 mb-10">
            <div className="flex justify-between">
              <label className="text-lg font-bold">Loan Amount :</label>
              <input
                type="number"
                name="amount"
                value={userValues.amount}
                onChange={handleInputChange}
                className=" bg-transparent border-[1px] rounded-sm p-1 text-white w-2/3"
              />
            </div>

            <div className="flex justify-between">
              <label className="text-lg font-bold">Loan year :</label>
              <input
                type="number"
                name="year"
                value={userValues.year}
                onChange={handleInputChange}
                className=" bg-transparent border-[1px] rounded-sm p-1 text-white  w-2/3"
              />
            </div>

            <div className="flex justify-between">
              <label className="text-lg font-bold">Interest Rate :</label>
              <input
                type="number"
                name="rate"
                value={userValues.rate}
                onChange={handleInputChange}
                className=" bg-transparent border-[1px] rounded-sm p-1 text-white  w-2/3"
              />
            </div>

            <div className="w-full flex md:justify-center justify-end">
              <Button
                onClick={(e) => {
                  monthlyPay(userValues);
                }}
              >
                Calculate
              </Button>
            </div>
          </div>

          <div className="lg:w-1/3 md:[40%] rounded-xl w-full bg-black text-gray-500 shadow-gray-900 shadow-xl p-5 flex flex-col gap-y-8 justify-center">
            <div className="flex justify-between">
              <span className="text-lg font-bold uppercase">
                Monthly Pay :{" "}
              </span>
              <p className="text-2xl font-bold text-gray-100">
                {Result.monthAmount.toFixed(2)}
              </p>
            </div>

            <div className="flex justify-between">
              <span className="text-lg font-bold uppercase">
                Total of {Result.totalMonths} Loan Payments :
              </span>
              <p className="text-2xl font-bold text-gray-100">
                {Result.totalAmount.toFixed(2)}
              </p>
            </div>

            <div className="flex justify-between">
              <h1 className=" text-lg font-bold uppercase">
                Total Interest Amount :
              </h1>
              <p className="text-2xl font-bold text-gray-100">
                {Result.interestAmount.toFixed(2)}
              </p>
            </div>
          </div>
        </div>

        <div className="flex justify-center mt-12 ">
          <div
            className={
              option
                ? "bg-white px-4 cursor-pointer hover:bg-green-500 hover:bg-opacity-50 hover:text-white py-2"
                : " bg-green-500 text-white  px-4 cursor-pointer hover:bg-green-500 hover:text-white py-2"
            }
            onClick={() => setoption(false)}
          >
            Monthly
          </div>
          <div
            className={
              option
                ? "bg-green-500 px-4 cursor-pointer hover:bg-green-500 hover:text-white py-2"
                : "bg-white px-4 cursor-pointer hover:bg-green-500 hover:bg-opacity-50 hover:text-white py-2"
            }
            onClick={() => setoption(true)}
          >
            Yearly
          </div>
        </div>

        <div className="">
          {option == false ? (
            <div className={styles.maintbl}>
              <div className="lg:px-32 px-0">
                <div className="flex justify-between text-center w-full bg-blue-gray-100 py-2 px-2 rounded-t-lg">
                  <div className="w-1/5">Month</div>
                  <div className="w-1/5">Beginning Balance</div>
                  <div className="w-1/5">Interest</div>
                  <div className="w-1/5">Principle</div>
                  <div className="w-1/5">Ending Balance</div>
                </div>

                {dee?.map((item: any, index: any) => {
                  return (
                    <>
                      <div>
                        <div key={index}>
                          <div
                            className="flex w-full justify-between bg-blue-gray-100 py-2 px-2 text-center "
                            style={{
                              background:
                                index % 2 != 0 ? "lightgray" : "white",
                            }}
                          >
                            <div className="w-1/5">{index + 1}</div>
                            <div className="w-1/5">{item.begBalance}</div>
                            <div className="w-1/5">{item.Interest}</div>
                            <div className="w-1/5">{item.principle}</div>
                            <div className="w-1/5">{item.endBalance}</div>
                          </div>
                        </div>
                      </div>
                    </>
                  );
                })}
              </div>
            </div>
          ) : (
            <div className={styles.maintbl}>
              <div className="lg:px-32 px-0">
                <div className="flex justify-between text-center w-full bg-blue-gray-100 py-2 px-2 rounded-t-lg">
                  <div className="w-1/5">Yearly</div>
                  <div className="w-1/5">Beginning Balance</div>
                  <div className="w-1/5">Interest</div>
                  <div className="w-1/5">Principle</div>
                  <div className="w-1/5">Ending Balance</div>
                </div>

                {ydata?.map((item: any, index: any) => {
                  return (
                    <>
                      <div>
                        <div key={index}>
                          <div
                            className="flex w-full justify-between bg-blue-gray-100 py-2 px-2 text-center "
                            style={{
                              background:
                                index % 2 != 0 ? "lightgray" : "white",
                            }}
                          >
                            <div className="w-1/5">{index + 1}</div>
                            <div className="w-1/5">{item.yBegBalance}</div>
                            <div className="w-1/5">{item.yInterest}</div>
                            <div className="w-1/5">{item.yPrinciple}</div>
                            <div className="w-1/5">{item.yEndBalance}</div>
                          </div>
                        </div>
                      </div>
                    </>
                  );
                })}
              </div>
            </div>
          )}
        </div>
      </div>
    </>
  );
}
